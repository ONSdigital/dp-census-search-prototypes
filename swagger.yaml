openapi: 3.0.0
info:
  description: "Used to search for possible datasets."
  version: "v0.1.0"
  title: "Search for a dataset"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
servers:
  - url: http://cat.ons.digital/v1
    description: "Staging API for prototype"
tags:
- name: "Public"
paths:
  /search/parent:
    post:
      tags:
      - "Public"
      summary: "Returns a list of search results based on the postcode and distance."
      requestBody:
        description: "A new shapefile contains WKT definition of a geo spatial shape."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShapeFile'
      responses:
        201:
          description: "A json list containing search results of datasets which are relevant to the area generated by the postcode and distance query parameter"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
          links:
            GetDatasetsById:
              operationId: getParentDatasetDocs
              parameters:
                shapeId: '$response.body#/id'
              description: >
                The `id` value returned in the response can be used as
                the `shapeId` parameter in `GET /search/parent/{shapeId}`.
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalError'
    options:
      tags:
      - "Public"
      summary: "Information about the communication options available for the target resource"
      responses:
        204:
          description: "No Content"
          headers:
            Access-Control-Allow-Methods:
              schema:
                type: string
              description: "The methods allowed access against this resource as a comma separated list."
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: "The web urls allowed access against this resource as a comma separated list."
              example: "*"
            Access-Control-Max-Age:
              schema:
                type: integer
              description: "Header indicates how long the results of a preflight request can be cached."
              example: 86400
        500:
          $ref: '#/components/responses/InternalError'
  /search/parent/{shapeId}:
    get:
      tags:
      - "Public"
      summary: "Returns a list of search results based on the geo shape of resource represented by the ID."
      operationId: getParentDatasetDocs
      parameters:
      - $ref: '#/components/parameters/shapeId'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: "A json list containing search results of datasets which are relevant to the area generated by the postcode and distance query parameter"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalError'
  /search/placenames/{name}:
    get:
      tags:
      - "Public"
      summary: "Returns a list of search results based on the postcode and distance."
      parameters:
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: "A json list containing search results of datasets which contain the name of place in the search mapping field name."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsWithLocation'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalError'
  /search/postcodes/{postcode}:
    get:
      tags:
      - "Public"
      summary: "Returns a list of search results based on the postcode and distance."
      parameters:
      - $ref: '#/components/parameters/postcode'
      - $ref: '#/components/parameters/distance'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/relation'
      responses:
        200:
          description: "A json list containing search results of datasets which are relevant to the area generated by the postcode and distance query parameter"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasets'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalError'
components:
  parameters:
    name:
      name: name
      description: "The name of a place"
      in: path
      required: true
      schema:
        type: string
        example: "bradford"
    shapeId:
      name: shapeId
      description: "The unique identifier to represent a shape file"
      in: path
      required: true
      schema:
        type: string
    postcode:
      name: postcode
      description: "The 6 or 7 digit code that defines a postcode"
      in: path
      required: true
      schema:
        type: string
    distance:
      name: distance
      description: "The radial distance from post code. The value should contain a numerical (float) value followed by the unit of measurement separated by a comma (e.g. 10,km). Acceptable units are: 1) km, kilometers, kilometres (case insensitive) 2) m, miles (case insensitive)"
      in: query
      required: true
      schema:
        type: string
        example: "50,km"
    limit:
      name: limit
      description: "The number of items requested, defaulted to 50 and limited to 1000."
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 50
    offset:
      name: offset
      description: "The first row of resources to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter."
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
    relation:
      name: relation
      description: "The relationship between the geographical area generated from postcode and distance (circular polygon) and the geographical area that is related to a dataset. This can be either 'intersects' or 'within'"
      in: query
      required: false
      schema:
        default: "within"
        type: string
        enum: [
          "within",
          "intersects"
        ]
        example: "intersects"
  schemas:
    ShapeFile:
      description: "A new shapefile contains WKT definition of a geo spatial shape."
      type: "object"
      required: [
        type,
        coordinates,
      ]
      properties:
        type:
          description: "The type of geo spatial shape"
          enum: [
            "polygon"
          ]
          type: string
        coordinates:
          $ref: '#/components/schemas/Shape'
    Datasets:
      description: "The resulting resource of the completed search against a geo location."
      type: object
      required: ["count","limit", "items", "offset"]
      properties:
        count:
          description: "The number of items returned."
          type: integer
        items:
          description: "The results of the postcode search."
          type: array
          items:
            $ref: '#/components/schemas/SearchResponse'
        limit:
          description: "The number of items requested, defaulted to 50 and limited to 1000."
          type: integer
        offset:
          description: "The first row of items to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter. The total number of items that one can page through is limited to 1000 items."
          type: integer
    DatasetsWithLocation:
      description: "The resulting resource of the completed search against a dataset place name."
      type: object
      required: ["count","limit", "items", "offset"]
      properties:
        count:
          description: "The number of items returned."
          type: integer
        items:
          description: "The results of the postcode search."
          type: array
          items:
            $ref: '#/components/schemas/SearchResponseWithLocation'
        limit:
          description: "The number of items requested, defaulted to 50 and limited to 1000."
          type: integer
        offset:
          description: "The first row of items to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter. The total number of items that one can page through is limited to 1000 items."
          type: integer
    SearchResponseWithLocation:
      description: "An individual result (dataset) of the postcode search"
      type: object
      required: ["name", "code", "hierarchy"]
      properties:
        name:
          type: string
          description: "The name of the geographical location of the dataset."
          example: "Wales"
        code:
          type: string
          description: "The code representing the geographical location."
        hierarchy: 
          type: string
          description: "The geographical hierarchy level"
          enum: [
            "Lower Layer Super Output Areas",
            "Middle Layer Super Output Areas",
            "Output Areas",
            "Major Towns and Cities"
          ]
        location:
          $ref: '#/components/schemas/Location'
    SearchResponse:
      description: "An individual result (dataset) of the postcode search"
      type: object
      required: ["name", "code", "hierarchy"]
      properties:
        name:
          type: string
          description: "The name of the geographical location of the dataset."
          example: "Wales"
        code:
          type: string
          description: "The code representing the geographical location."
        hierarchy: 
          type: string
          description: "The geographical hierarchy level"
          enum: [
            "Lower Layer Super Output Areas",
            "Middle Layer Super Output Areas",
            "Output Areas",
            "Major Towns and Cities"
          ]
        lsoa11nm:
          type: string
          description: "Name of the lower layer super output area, not sure how it differs from lsoa1nmw ☃"
        lsoa11nmw:
          type: string
          description: "Name of the lower layer super output area, not sure how it differs from lsoa1nm ☃"
        msoa11nm:
          type: string
          description: "Name of the middle layer super output area, not sure how it differs from lsoa1nmw ☃"
        msoa11nmw:
          type: string
          description: "Name of the middle layer super output area, not sure how it differs from lsoa1nm ☃"
        lad11cd:
          type: string
          description: "Code representing the local authority code"
        oa11cd:
          type: string
          description: "Code representing the output area"
        tcity15nm:  
          type: string
          description: "Name of the town or city"
        shape_area:  
          type: string
          description: "☃"
        shape_length:  
          type: string
          description: "☃"
        stated_area:  
          type: string
          description: "☃"
        stated_length:  
          type: string
          description: "☃"
    Location:
      description: "The geographical location of the dataset or data found, containing a geographial description of the shape."
      type: object
      required: [coordinates, type]
      properties:
        coordinates:
          description: "A set of list coordinates to handle different geographical shapes, e.g. ring, circle."
          type: array
          items:
            $ref: '#/components/schemas/Shape'
        type:
          description: "The type of shape of the geographical boundary."
          type: string
          enum: [
            "Multipolygon",
            "Polygon"
          ]
    Shape:
      description: "The actual shape of the geographical area the dataset belongs to. Multipolygons have an extra nest of arrays then a polygon shape as multipolygons are arrays of polygons."
      type: array
      minLength: 4
      required: [
        coordinates,
      ]
      items:
        $ref: '#/components/schemas/Coordinates'
    Coordinates:
      description: "A list of coordinates to generate a continuous boundary line, first and last item must match."
      type: array
      required: [
        coordinate,
      ]
      items:
        $ref: '#/components/schemas/Coordinate'
    Coordinate:
      description: "A single set of coordinates defining a single point on the Earth by longitude then latitude respectively. Numerical values are float64 type."
      type: number
      format: float64
      example: [ -3.4627, 51.486 ]
      minLength: 2
      maxLength: 2
  responses:
    InvalidRequestError:
      description: "Failed to process the request due to invalid request."
    InternalError:
      description: "Failed to process the request due to an internal error."
    NotFoundError:
      description: "Dimension or option not found."
